# /---------------------------------------------------------------------------
# commonColumnMap: (Default 'map:{}')
# 
# The definition of common column(contains auto set-up).
# For example, the date you registered the record,
# the user who updated the record and so on...
# The column names are treated as case insensitive.
# 
# The variable '$$AccessContext$$' means allcommon.AccessContext.
# 
# Example:
# map:{
#     ; commonColumnMap = map:{
#         ; REGISTER_DATETIME=TIMESTAMP ; REGISTER_USER=VARCHAR ; REGISTER_PROCESS=VARCHAR
#         ; UPDATE_DATETIME=TIMESTAMP   ; UPDATE_USER=VARCHAR   ; UPDATE_PROCESS=VARCHAR
#     }
#     ; beforeInsertMap = map:{
#         ; REGISTER_DATETIME = $$AccessContext$$.getAccessTimestampOnThread()
#         ; REGISTER_USER     = $$AccessContext$$.getAccessUserOnThread()
#         ; REGISTER_PROCESS  = $$AccessContext$$.getAccessProcessOnThread()
#         ; UPDATE_DATETIME   = entity.getRegisterDatetime()
#         ; UPDATE_USER       = entity.getRegisterUser()
#         ; UPDATE_PROCESS    = entity.getRegisterProcess()
#     }
#     ; beforeUpdateMap = map:{
#         ; UPDATE_DATETIME   = $$AccessContext$$.getAccessTimestampOnThread()
#         ; UPDATE_USER       = $$AccessContext$$.getAccessUserOnThread()
#         ; UPDATE_PROCESS    = $$AccessContext$$.getAccessProcessOnThread()
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    ; commonColumnMap = map:{
        ; REGISTER_DATETIME=TIMESTAMP ; REGISTER_USER=VARCHAR
        ; UPDATE_DATETIME=TIMESTAMP   ; UPDATE_USER=VARCHAR
    }
    ; beforeInsertMap = map:{
        ; REGISTER_DATETIME = $$AccessContext$$.getAccessTimestampOnThread()
        ; REGISTER_USER     = $$AccessContext$$.getAccessUserOnThread()
        ; UPDATE_DATETIME   = entity.getRegisterDatetime()
        ; UPDATE_USER       = entity.getRegisterUser()
    }
    ; beforeUpdateMap = map:{
        ; UPDATE_DATETIME   = $$AccessContext$$.getAccessTimestampOnThread()
        ; UPDATE_USER       = $$AccessContext$$.getAccessUserOnThread()
    }
}
# ----------------/
# 
# Reference for Column Type of CommonColumn:
# ------------------------------------------------------
# | JDBC Type     | Java Type            | CSharp Type |
# | ----------------------------------------------------
# | CHAR          | java.lang.String     | String      |
# | VARCHAR       | java.lang.String     | String      |
# | LONGVARCHAR   | java.lang.String     | String      |
# | NUMERIC       | java.math.BigDecimal | decimal?    |
# | DECIMAL       | java.math.BigDecimal | decimal?    |
# | BIT           | java.lang.Boolean    | bool?       |
# | BOOLEAN       | java.lang.Boolean    | bool?       |
# | TINYINT       | java.lang.Integer    | int?        |
# | SMALLINT      | java.lang.Integer    | int?        |
# | INTEGER       | java.lang.Integer    | int?        |
# | BIGINT        | java.lang.Long       | long?       |
# | REAL          | java.math.BigDecimal | decimal?    |
# | FLOAT         | java.math.BigDecimal | decimal?    |
# | DOUBLE        | java.math.BigDecimal | decimal?    |
# | BINARY        | byte[]               | byte[]      |
# | VARBINARY     | byte[]               | byte[]      |
# | LONGVARBINARY | byte[]               | byte[]      |
# | DATE          | java.util.Date       | DateTime?   |
# | TIME          | java.sql.Time        | DateTime?   |
# | TIMESTAMP     | java.sql.Timestamp   | DateTime?   |
# ------------------------------------------------------
